# 그리디 알고리즘
# 백준 12845번
# 등급 실버 3

# 문제 해결 아이디어
# 가장 높은 레벨을 가진 카드 찾고
# 그 카드를 중심으로 앞 뒤에 존재하는 가장 높은 레벨을 찾아서
# 각각의 레벨의 합을 누적하여 연산하면 된다.

# 그러나
# 이렇게 푸는게 문제에서 제시한 조건 1) 인접한 카드, 2) 순서 에 너무 집착한 것이다.
# 만약 20 30 50 10 순서로 숫자가 주어졌다고 생각해보자.
# 50이 가장 큰 값이니, (50+30) + (50+20) + (50+10) = 210 이 순서로 풀릴 것이다.
# 단순하게 생각해보면 50이라는 가장 큰 수를 찾고 그냥 순서대로 계산을 해도 동일하지 않은가?
# (50+20) + (50+30) + (50+10) = 210 으로 같은 값이 나온다.

# 이 문제를 간단하게 푸는 원리는 내림차순 정렬을 하는 것이다.
# 가장 큰 값을 토대로 다음 값, 다음 값 연산을 하는 것이 동일한 결과를 출력하게 된다.

import sys

# 20 40 50 20 30
n = int(sys.stdin.readline())
card = sorted(list(map(int, sys.stdin.readline().split())), reverse=True)
gold = 0

# 골드 구하기
for i in range(1, n):
    gold += card[0] + card[i]

print(gold)
