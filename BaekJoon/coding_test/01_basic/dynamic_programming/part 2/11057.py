# 코딩 테스트 준비 - 기초
# 백준 11057 오르막 수
# 등급 실버 1

# 문제 해결 아이디어
# 한번 표로 경우의 수를 표시해 보자
# N 자리수의 끝 수를 기준으로 만들 수 있는 수의 개수
# N     0   1   2   3   4   5   6   7   8   9
# 1     1   1   1   1   1   1   1   1   1   1
# 2     1   2   3   4   5   6   7   8   9   10
# 3     1   3   6   10  15  21  28  36  45  55
# 위 표를 잘 보면 규칙성을 찾아낼 수 있는데
# N 이 1 자리 수인 경우 끝나는 수가 무엇이던 간에 만들수 있는 수의 개수는 1개
# N 이 몇자리 수인 것과 상관없이 0으로 끝나는 수의 개수는 1개

# N >= 2 범위에서 끝나는 수에 따라 만들수 있는 수의 개수는
# dp[i][j] = dp[i][j - 1] + dp[i - 1][j]

import sys
n = int(sys.stdin.readline().rstrip())
dp = [[1] * 10 for _ in range(1001)]

for i in range(2, n + 1):
    for j in range(1, 10):
        dp[i][j] = dp[i][j - 1] + dp[i - 1][j]

print(sum(dp[n]) % 10007)
