# 코딩 테스트 준비 - 기초
# 백준 2133 타일 채우기
# 등급 실버 1

# 문제 해결 아이디어
# 일일히 그림을 그려서 점화식을 세우는 지저분한 문제이다.
# N이 홀수이면 타일을 전부 채울수 없기 때문에 0이다.
# n = 2 : 3
# n = 4 : 11
# n = 6 : 41
# n = 8 : 153
# 점화식은 상당히 지저분한데
# dp[i] = dp[2] * dp[i - 2] 를 수행하고
# dp[i] += 2 * dp[i- j] 이전에 수행했던 모양들을 두번 곱해서 더해준 다음
# dp[i] += 2 새로운 모양 두개를 더해준다.

import sys
n = int(sys.stdin.readline().rstrip())
dp = [0] * 31
dp[2] = 3

for i in range(4, 31, 2):
    dp[i] = dp[2] * dp[i - 2]

    for j in range(4, i, 2):
        dp[i] += 2 * dp[i - j]
    dp[i] += 2

print(dp[n])
